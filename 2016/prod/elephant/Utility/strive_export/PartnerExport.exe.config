<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="CAAppSettings" type="System.Configuration.NameValueSectionHandler" />
  </configSections>  
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  
    <configProtectedData>
    <providers>
      <add keyContainerName="CAOKey"
           useMachineContainer="true"
           description="Uses RsaCryptoServiceProvider to encrypt and decrypt"
           name="CAOProvider"
           type="System.Configuration.RsaProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </providers>
  </configProtectedData>
 	
  <connectionStrings configSource="connstrings.config" />
  
  <!-- Custom section to keep sensitive information-->
  <CAAppSettings>
    <add key="FtpUserId" 							value="castrive" />
    <add key="FtpPassword" 							value="xxxxxxx" />
    <add key="FtpUrl" 								value="ftp://ftp.private.prod16.commonapp.net" />
  </CAAppSettings>
  <appSettings>
    <!--  Name of Export DB. Need in config because name may not be uniform across enviornments-->
    <add key="ExportDB" value="PartnerExport" />
	
    <!--  AWS related settings  -->
    <add key="AWSRegion" 							value="us-west-2" />
    <add key="TotalRetryCount" 						value="5" />
    <add key="SWFDomain" 							value="prod16.elephant.sds" />
    <add key="SWFSmallExportWorkflow" 				value="workflow.export.small" />
    <add key="SWFLargeExportWorkflow" 				value="workflow.export.large" />
    <add key="SWFSmallPrintWorkflow" 				value="workflow.print.small" />
    <add key="SWFLargePrintWorkflow" 				value="workflow.print.large" />
    <add key="SWFSmallPrintWorkflowVersion" 		value="2.0" />
    <add key="SWFLargePrintWorkflowVersion" 		value="2.0" />
    <add key="SWFSmallExportWorkflowVersion" 		value="2.0" />
    <add key="SWFLargeExportWorkflowVersion" 		value="2.0" />
    <add key="BucketMemberSds" 						value="ca.prod16.sds" />
	
    <!-- Export template id to use in export process. The ExportTypeId should :always: be xml in the ExportTemplate table, no matter what the end result of the file you want. -->
    <add key="ExportTemplateId" 					value="15637" />
	
    <!-- What file type to use for the final exported document. Supported: csv, xml -->
    <add key="ExportFileType" 						value="csv"/>
	
    <!-- value and line delimiters for supported file types. Supported: csv-->
    <add key="Delimiter" 							value="|"/>
	
    <add key="LineDelimiter" 						value=""/>
    
    <!--  Number of concurrent requests to large export SWF tier, -->
    <add key="MaxParallelProcessCounter" 			value="20" />
	
    <!--  Flag to indicate whether process will put file in Ftp-->
    <add key="UploadToFtp" 							value="true" />
	
    <!--  Flag to indicate whether process will put file in S3-->
    <add key="UploadToS3" 							value="true" />
	
    <!--  File name for final export file. {0} will be replaced by date time. DO NOT use a filetype suffix. It will be automatically generated based on ExportFileType-->
    <add key="FileNameFormat" 						value="StriveExport_{0}" />
	
    <!-- Date format for file name. List of possbile date time format: https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx-->
    <add key="DateFormatInFileName" 				value="yyyy_MM_dd_HH_mm_ss" />
	
    <!--  ID and Name (without spaces) of the partner.-->
    <add key="PartnerId" 							value="2" />
	
    <add key="PartnerString" 						value="Strive" />
	
    <add key="MarkAsExported" 						value="true" />

    <!--
    This query is for ad-hoc runs of the script that ARE NOT meant for everyday usage.
    Filling this query will result in the ExportHistory entry having UsedCustomQuery=true
    See The comments for "Query" for what is expected in a CustomQuery
    -->
    <add key="CustomQuery" 							value=""/>
    
    <!--
    This query is used to get the list of Applicants who meet the criteria for exporting.
    Unlike CustomQuery, this is used for scheduled tasks.
    No parameters are provided by the code.
    Return value: Rows of (ApplicantId, MemberId, Abbreviation)
    ApplicantId: Unique for each row
    MemberId and Abbreviation: Used to determine S3 buckets and file names
    -->
    <add key="Query" value=
"SELECT 
    AP.ApplicantId,
    M.MemberId,
    M.Abbreviation
FROM
    ApplicantProfile AP
        JOIN
    ApplicantMember AM ON AP.ApplicantId = AM.ApplicantId
        AND AP.DeleteStatus = 0
        AND AP.TestApp = 0
		AND AP.ApplicantTypeID = 1
        AND AM.DeleteStatus = 0
        JOIN
    Member M ON M.MemberId = AM.MemberId
        AND M.DeleteStatus = 0
        AND M.Status IN (1,2)
        JOIN
    CommonAnswer CA ON CA.ApplicantId = AP.ApplicantId
        AND CA.QuestionId = 1911
        AND CA.Response = 0
		JOIN
	CommonAnswer CA_HSL ON CA_HSL.ApplicantId = AP.ApplicantId
        AND CA_HSL.QuestionId = 245
        LEFT JOIN
    PartnerExport.ExportHistoryDetail EHD ON EHD.ApplicantId = AP.ApplicantId
        AND EHD.DeleteStatus = 0
        LEFT JOIN
    PartnerExport.ExportHistory EH ON EH.ExportHistoryId = EHD.ExportHistoryId
        AND EH.DeleteStatus = 0
        AND EH.PartnerId = 2
WHERE
    EH.ExportHistoryId IS NULL
        AND EHD.ExportHistoryDetailId IS NULL
GROUP BY AP.ApplicantId;" />

    <add key="TempFilePath" value="c:\temp" />
	
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>