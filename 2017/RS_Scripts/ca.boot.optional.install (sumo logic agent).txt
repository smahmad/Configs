# Powershell 2.0
# Copyright (c) 2008-2013 RightScale, Inc, All Rights Reserved Worldwide.

$errorActionPreference = "Stop"
 
$CA_REBOOT = [environment]::GetEnvironmentVariable("CA_REBOOT","Machine")

# Add $env: to force execute input if this code is ever uncommented
if ([System.Convert]::ToBoolean($CA_REBOOT) -and !([System.Convert]::ToBoolean($env:CA_GLB_FORCE_EXECUTE))){
          
  write-host "Skipping after reboot."
  exit 0
}

$region = $env:CA_DPL_REGION
$bucketName = $env:CA_GBL_OPS_BUCKET_NAME
$configKey = $env:CA_DPL_SUMO_CONFIG_PATH
$installSumo = $env:CA_SA_BOOL_SUMO_INSTALL
$instanceID = $env:CA_GBL_INSTANCE_NAME
$envrole = $env:CA_SA_SUMO_TAG
$ephemeralstate = $env:CA_SA_BOOL_INSTANCE_EPHEMERAL_STATE 
$sumoLogicAPISecretKey = $env:CA_GBL_CRED_SUMO_API_SECRET_KEY
$sumoLogicAPIAccessKey = $env:CA_GBL_CRED_SUMO_API_ACCESS_KEY

# Sumo does not love spaces in instanceIDs

$instanceID = $instanceID -replace " ", "-"
$instanceID = $instanceID -replace "#", ""

if ($installSumo.ToLower() -ne "true"){
  write-host "Skipping the Sumo Collector install on the instance because install sumo flag is set to $installSumo.ToLower()."
  exit 0
}

# Create sumo folder if it doesn't exist
  if ( -not (Test-Path c:\sumo)) {
    mkdir c:\sumo
  }
  
Remove-Item c:\sumo\* -recurse -force

$localPath = "c:\sumo"



$localFilePath = Join-Path $localPath "sumo.conf"
$keyFilePath = Join-Path $configKey "sumo.conf"

Read-S3object -BucketName $bucketName -Key $keyFilePath  -File $localFilePath -Region $region

$localFilePath = Join-Path $localPath "ca-prod-win-sources.json"
$keyFilePath = Join-Path $configKey "ca-prod-win-sources.json"

Read-S3object -BucketName $bucketName -Key $keyFilePath -File $localFilePath -Region $region




Add-Content -path c:\sumo\sumo.conf -value accessid=$sumoLogicAPIAccessKey

Add-Content -path c:\sumo\sumo.conf -value name=$instanceid

Add-Content -path c:\sumo\sumo.conf -value hostName=$instanceid

Add-Content -path c:\sumo\sumo.conf -value ephemeral=$ephemeralstate

Add-Content -path c:\sumo\sumo.conf -value accesskey=$sumoLogicAPISecretKey


(Get-Content C:\sumo\ca-prod-win-sources.json) | Foreach-Object {$_ -replace "ReplaceWithEnvRole", "$envrole"} | Set-Content C:\sumo\win-sources.json

(Get-Content C:\sumo\win-sources.json) | Foreach-Object {$_ -replace "ReplaceWithInstanceID", "$instanceid"} | Set-Content C:\sumo\win-sources.json

xcopy c:\sumo\*.* c:\misc\*.* /Y

c:\misc\SumoCollector_windows-x64.exe -q
