<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  
  <configSections>
    <section name="CAAppSettings" type="System.Configuration.NameValueSectionHandler"/>
  </configSections>
  <startup> 
      <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  
  <configProtectedData>
		<providers>
			<add keyContainerName="CAOKey" useMachineContainer="true" description="Uses RsaCryptoServiceProvider to encrypt and decrypt" name="CAOProvider" type="System.Configuration.RsaProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
		</providers>
	</configProtectedData>
	
  <connectionStrings configSource="connstrings.config" />
  
  <!-- Custom section to keep sensitive information-->
  <CAAppSettings>    
    <add key="FtpUserId" 					value="dell" />
    <add key="FtpPassword" 					value="1VBwp2Ja" />
    <add key="FtpUrl" 						value="ftp://ftp.private.prod16.commonapp.net" />
  </CAAppSettings>
  <appSettings>
    <!--  Name of utility DB. Need in config because name is not uniform across enviornments-->
    <add key="UtilityDB" 							value="ScholarSnapp"/>
	
    <!--  AWS related settings  -->
    <add key="AWSRegion" 							value="us-west-2" />
    <add key="TotalRetryCount" 						value="5"/>
    <add key="SWFDomain" 							value="prod16.elephant.sds" />    
    <add key="SWFSmallExportWorkflow" 				value="workflow.export.small" />
    <add key="SWFLargeExportWorkflow" 				value="workflow.export.large" />
    <add key="SWFSmallPrintWorkflow" 				value="workflow.print.small" />
    <add key="SWFLargePrintWorkflow" 				value="workflow.print.large" />
    <add key="SWFSmallPrintWorkflowVersion" 		value="2.0" />
    <add key="SWFLargePrintWorkflowVersion" 		value="2.0" />
    <add key="SWFSmallExportWorkflowVersion" 		value="2.0" />
    <add key="SWFLargeExportWorkflowVersion" 		value="2.0" />
    <add key="BucketMemberSds" 						value="ca.prod16.sds" />
    
    <!--  Export template id to use in exprrt process -->
    <add key="ExportTemplateId" 					value="8793"/>
    
    <!--  Number of concurrent request to large export SWF tier, -->
    <add key="MaxParallelProcessCounter" 			value="20"/>
	
    <!--  Flag to indicate whether process will put file in Ftp-->
    <add key="UploadToFtp" 							value="true"/>
	
    <!--  Flag to indicate whether process will put file in S3-->
    <add key="UploadToS3" 							value="true"/>
    
    <!--  File name for final export file. {0} will be replaced by date time.-->
    <add key="FileNameFormat" 						value="ScholarSnapp_{0}.xml"/>
    <add key="DateFormatInFileName" 				value="yyyy_MM_dd_HH_mm_ss"/>
	
    <!--  If we use this process in future for more partners we can change this id. Id: 1 is ScholarSnapp.-->
    <add key="PartnerId" 							value="1"/>

    <add key="MarkAsExported" 						value="true"/>
    
    <!--  Use this key to run export on custom records. Sample query:
                                        select 
    TT.ApplicantId, TT.MemberId, m.Abbreviation
from
    ApplicantProfile ap1
        join
    (select 
        ap.ApplicantId, (am.MemberId), (af.SubmittedDate)
    from
        ApplicantProfile ap
    Join ApplicantMember am ON am.ApplicantId = ap.ApplicantId
        and am.DeleteStatus = 0
        and ap.TestApp = 0
    Join ApplicantForm af ON af.ApplicantMemberId = am.ApplicantMemberId
        and af.SubmittedDate is not null
        and af.SubmissionStatus = 2
        and af.Formid = 1
    Join CommonAnswer a ON a.ApplicantId = ap.ApplicantId
        and a.QuestionId = 1049
        and a.Response = 0
    order by ap.ApplicantId , af.submitteddate desc) TT ON ap1.ApplicantId = TT.ApplicantId
        Join
    Member m ON m.MemberId = TT.MemberId
        left join
    (select 
        ApplicantId
    from
        ScholarSnapp.ScholarExportDetail sed
    JOIN ScholarSnapp.ScholarExport se ON se.ScholarExportId = sed.ScholarExportId
        AND se.ScholarPartnerId = 1
        and se.DeleteStatus = 0
        and sed.deletestatus = 0) TT1 ON TT1.ApplicantId = TT.ApplicantId
WHERE
    TT1.ApplicantId is null
group by ap1.ApplicantId;
    -->
    <add key="CustomQuery" 							value=""/>
    <add key="TempFilePath" 						value="c:\temp"/>
  </appSettings>
  
</configuration>
